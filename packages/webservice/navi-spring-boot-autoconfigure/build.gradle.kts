/*
 * This file was generated by the Gradle "init" task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.2/userguide/java_library_plugin.html
 */
import com.moowork.gradle.node.npm.NpmTask

plugins {
    // Apply the java-library plugin to add support for Java Library
    `java-library`
    id("com.moowork.node") version "1.3.1"
}

dependencies {
    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation("org.springframework.boot:spring-boot-starter-web:2.2.1.RELEASE")

    compileOnly("org.projectlombok:lombok:1.18.10")
    annotationProcessor("org.projectlombok:lombok:1.18.10")

    // Use JUnit test framework
    testImplementation("junit:junit:4.12")
}

val installUIDependencies by tasks.registering(NpmTask::class) {
    setArgs(listOf("install"))
    setExecOverrides(closureOf<ExecSpec> {
        setWorkingDir("../../../")
    })
}

// Task for executing build:gradle in web
val buildUI by tasks.registering(Exec::class) {
    // Before buildWeb can run, installDependencies must run
    dependsOn(installUIDependencies)

    workingDir("../../..")

    commandLine = listOf("npx", "lerna", "run", "prodbuild", "--scope", "navi-app", "--stream")
}

// Before jar can run, buildWeb must run
tasks.jar {
    dependsOn(copyNaviApp)
}

val copyNaviApp by tasks.registering(Copy::class) {
    dependsOn(buildUI)
    from("../../app/dist")
    into("$buildDir/resources/main/META-INF/resources")
}